openapi: 3.0.0
info:
  title: Michelle
  description: Michelle es un servicio que administra las operaciones para la organización de SintergicaAI
  version: 0.2.0
  contact:
    name: Edson Manuel Carballo Vera
    email: edson.vera@sintergica.ai
servers:
  - description: Servidor de producción
    url: 'https://michelle-hoyto.ondigitalocean.app/'
paths:
  /package:
    summary: Catalogo de paquetes
    description: Endpoint para administrar el catalogo de paquetes de diversos tipos dentro de la organizacion
    get:
      summary: Retorna los paquetes registrados en la organizacion
      description: Retorna una lista con los paquetes disponibles dentro de la organizacion para su uso
      tags:
        - Package
      parameters:
        - $ref: '#/paths/~1event~1%7Bchannel%7D/put/parameters/1'
      responses:
        '200':
          description: Se ha retornado la informacion de los paquetes disponibles
          content:
            application/json:
              schema:
                description: Lista de paquetes
                type: array
                items:
                  type: object
                  allOf:
                    - description: Paquete de uno u otro tipo dentro de la organizacion
                      type: object
                      required:
                        - id
                        - name
                        - package_type
                      properties:
                        id:
                          description: Id del paquete de acuerdo a su tipo
                          type: integer
                          format: int32
                          example: 7446645
                        name:
                          description: Nombre corto del paquete. Solo para fines expositivos
                          type: string
                          example: lightner_back
                        package_type:
                          description: Tipo de paquete
                          type: string
                          example: container
                        tags:
                          type: array
                          description: Versiones activas del paquete
                          items:
                            type: string
                            example: 0.0.5
                    - $ref: '#/paths/~1package/get/responses/200/content/application~1json/schema/items/allOf/0'
                    - $ref: '#/paths/~1package/get/responses/200/content/application~1json/schema/items/allOf/0'
        '204':
          description: No hay paquetes disponibles
        '404':
          description: No se pudieron recuperar los paquetes de la organizacion
        '500':
          $ref: '#/paths/~1server~1%7BserverName%7D/delete/responses/500'
  /repository:
    summary: Catalogo de repositorios
    description: Endpoint para administrar el catalogo de repositorios de la organizacion
    get:
      summary: Retorna los repositorios
      description: Retorna una lista con los repositorios de la organizacion en GitHub
      tags:
        - Repository
      parameters:
        - $ref: '#/paths/~1event~1%7Bchannel%7D/put/parameters/1'
      responses:
        '200':
          description: Se ha retornado la informacion de los repositorios
          content:
            application/json:
              schema:
                description: Lista de repositorios
                type: array
                items:
                  type: object
                  allOf:
                    - $ref: '#/paths/~1repository~1%7Bname%7D/post/responses/201/content/application~1json/schema'
                    - $ref: '#/paths/~1repository~1%7Bname%7D/post/responses/201/content/application~1json/schema'
                    - $ref: '#/paths/~1repository~1%7Bname%7D/post/responses/201/content/application~1json/schema'
        '204':
          description: No hay repositorios disponibles
        '404':
          description: No se pudieron recuperar los repositorios de la organizacion
        '500':
          $ref: '#/paths/~1server~1%7BserverName%7D/delete/responses/500'
  '/repository/{name}':
    summary: Endpoint que identifica un repositorio por su nombre corto
    description: Endpoint para administrar las propiedades de un repositorio identificado por su nombre corto
    post:
      summary: Crea un repositorio identificado por su nombre corto
      description: Crea un nuevo repositorio identificado por su nombre cotro
      tags:
        - Repository
      parameters:
        - name: name
          description: Nombre del nuevo repositorio a crear
          in: path
          schema:
            type: string
            example: proyecto_front
          required: true
        - $ref: '#/paths/~1event~1%7Bchannel%7D/put/parameters/1'
      responses:
        '201':
          description: Se ha creado el nuevo repositorio
          content:
            application/json:
              schema:
                description: Repositorio de codigo en la organizacion de GitHub
                type: object
                properties:
                  name:
                    description: Nombre corto del repositorio. Solo para fines expositivos
                    type: string
                    example: anton
                  fullName:
                    description: Nombre completo del repositorio. Para fines administrativos
                    type: string
                    example: SintergicaAI/anton
                  url:
                    description: URL de la pagina del repositorio
                    type: string
                    example: 'https://github.com/SintergicaAI/anton'
        '409':
          description: Ya existe un repositorio con ese nombre
        '500':
          $ref: '#/paths/~1server~1%7BserverName%7D/delete/responses/500'
    delete:
      summary: Endpoint para eliminar un repositorio
      description: Endpoint para eliminar un repositorio identificado por su nombre corto
      tags:
        - Repository
      security:
        - basicAuth: []
      parameters:
        - name: name
          description: Nombre del repositorio a eliminar
          in: path
          schema:
            type: string
            example: proyecto_front
          required: true
        - $ref: '#/paths/~1event~1%7Bchannel%7D/put/parameters/1'
      responses:
        '200':
          description: Se ha eliminado el repositorio
        '404':
          description: El repositorio no existia en la organizacion
        '500':
          $ref: '#/paths/~1server~1%7BserverName%7D/delete/responses/500'
  /server:
    summary: Catalogo de servidores
    description: Catalogo de servidores
    get:
      summary: Retorna los servidores registrados
      description: Retorna los servidores registrados
      tags:
        - Server
      parameters:
        - $ref: '#/paths/~1event~1%7Bchannel%7D/put/parameters/1'
      responses:
        '200':
          description: Se ha retornado la informacion de los servidores registrados
          content:
            application/json:
              schema:
                description: Lista de servidores
                type: array
                items:
                  type: object
                  allOf:
                    - $ref: '#/paths/~1server/post/requestBody/content/application~1json/schema'
                    - $ref: '#/paths/~1server/post/requestBody/content/application~1json/schema'
                    - $ref: '#/paths/~1server/post/requestBody/content/application~1json/schema'
        '204':
          description: No hay servidores registrados
        '500':
          $ref: '#/paths/~1server~1%7BserverName%7D/delete/responses/500'
    post:
      summary: Registra un nuevo servidor
      description: Registra la informacion de un nuevo servidor
      tags:
        - Server
      security:
        - basicAuth: []
      requestBody:
        description: Informacion del nuevo servidor
        content:
          application/json:
            schema:
              description: 'Registro de un servidor de la organizacion, fisico o virtual'
              type: object
              required:
                - serverName
                - address
                - hasAnton
              properties:
                serverName:
                  description: Nombre del servidor. Opcional
                  type: string
                  example: openwebui-droplet
                address:
                  description: Direccion del servidor
                  type: string
                  example: 24.199.72.114
                hasAnton:
                  description: Booleano que indica si anton se encuentra corriendo en el servidor
                  type: boolean
                  example: true
                services:
                  description: Lista de servicios corriendo actualmente en el servidor
                  type: array
                  items:
                    type: object
                    allOf:
                      - description: Instancia de un paquete corriendo en un servidor
                        type: object
                        required:
                          - name
                          - image
                          - tag
                          - status
                        properties:
                          name:
                            description: Nombre del servicio
                            type: string
                            example: turing
                          image:
                            description: Imagen que corre actualmente el servicio
                            type: string
                            example: ghcr.io/sintergicaai/turing
                          tag:
                            description: Version del paquete que corre el servicio
                            type: string
                            example: 0.0.2
                          status:
                            description: Estado actual del servicio
                            type: string
                            example: running
                          eport:
                            description: Puerto externo del servicio
                            type: string
                            example: 42000
                          iport:
                            description: Puerto interno del servicio
                            type: string
                            example: 42000
                      - $ref: '#/paths/~1server/post/requestBody/content/application~1json/schema/properties/services/items/allOf/0'
                      - $ref: '#/paths/~1server/post/requestBody/content/application~1json/schema/properties/services/items/allOf/0'
      parameters:
        - $ref: '#/paths/~1event~1%7Bchannel%7D/put/parameters/1'
      responses:
        '201':
          description: Se ha registrado el nuevo servidor
          content:
            application/json:
              schema:
                $ref: '#/paths/~1server/post/requestBody/content/application~1json/schema'
        '409':
          description: El nombre del servidor ya se encuentra registrado
        '500':
          $ref: '#/paths/~1server~1%7BserverName%7D/delete/responses/500'
  '/server/{serverName}':
    summary: Endpoint para administrar un servidor
    description: Endpoint para administrar la informacion de un servidor identificado por su nombre
    delete:
      summary: Elimina un servidor
      description: Elimina un servidor identificado por su nombre
      tags:
        - Server
      parameters:
        - name: serverName
          description: Nombre del servidor a eliminar
          in: path
          schema:
            type: string
            example: openwebui-droplet
          required: true
        - $ref: '#/paths/~1event~1%7Bchannel%7D/put/parameters/1'
      responses:
        '200':
          description: Se ha eliminado el servidor
        '404':
          description: No se ha encontrado el servidor
        '500':
          description: Ha ocurrido un error interno del servidor y no se ha podido crear una respuesta apropiada
  '/event/{channel}':
    summary: Endpoint para administrar eventos
    description: Endpoint para administrar eventos
    post:
      summary: Registra un evento y subscribete a el
      description: Registra un evento y subscribete a el
      tags:
        - Events
      parameters:
        - name: channel
          description: Nombre del evento o canal
          in: path
          schema:
            type: string
            example: logout
          required: true
        - $ref: '#/paths/~1event~1%7Bchannel%7D/put/parameters/1'
      requestBody:
        description: Webhook para notificar evento
        content:
          text/plain:
            schema:
              type: string
              example: 'www.yourDomain.com:3000/eventNotification'
      responses:
        '200':
          description: Se ha registrado la subscripción
    put:
      summary: Dispara un evento
      description: Dispara un evento previamente registrado
      tags:
        - Events
      parameters:
        - name: channel
          description: Nombre del evento o canal
          in: path
          schema:
            type: string
            example: logout
          required: true
        - name: Authorization
          description: Contraseña del servicio
          in: header
          schema:
            type: string
            example: Basic adfklsjldf
      responses:
        '200':
          description: Se ha disparado el evento
        '404':
          description: El evento no se encuentra registrado
